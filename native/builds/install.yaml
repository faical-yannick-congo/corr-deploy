- name: playbook to install CoRR
  hosts: all
  serial: 1
  vars:
    local_path: /home/{{ ansible_ssh_user }}
    anaconda_path: "{{ local_path }}/{{ anacondadir }}"
    default_corr_path: "{{ corr_location }}/corr"
    conda: "{{ anaconda_path }}/bin/conda"
    env_path: "{{ anaconda_path }}/envs/{{ corr_env }}/bin"
    python: "{{ anaconda_path }}/envs/{{ corr_env }}/bin/python"
  tasks:

    - include: corr_path.yaml
      tags: [always]

    - include: clone.yaml
      tags: [install]

    - include: mongo.yaml
      tags: [install]
      when: inventory_hostname in groups['db']


    - include: conda.yaml
      tags: [install]
      when: >
        inventory_hostname in groups['db'] or
        inventory_hostname in groups['api'] or
        inventory_hostname in groups['cloud']

    - include: corrdb.yaml
      tags: [install]
      when: >
        inventory_hostname in groups['db'] or
        inventory_hostname in groups['api'] or
        inventory_hostname in groups['cloud']


    - include: view.yaml
      tags: [install]
      when: >
        ansible_ssh_host == 'localhost' and
        inventory_hostname in groups['frontend']

    - name: install nginx, python-httplib2
      tags: [install]
      apt:
        name: "{{ item }}"
        state: present
        force: yes
      become: true
      with_items:
        - nginx
        - python-httplib2
      when: >
        inventory_hostname in groups['frontend'] or
        inventory_hostname in groups['api'] or
        inventory_hostname in groups['cloud']

    - name: copy frontend config file
      tags: [install]
      when: inventory_hostname in groups['frontend']
      template: src={{ inventory_dir }}/config-frontend.js.j2 dest={{ corr_path }}/corr-view/frontend/js/config.js

    - name: copy frontend custom file
      tags: [install]
      when: inventory_hostname in groups['frontend']
      template: src={{ inventory_dir }}/custom.json.j2 dest={{ corr_path }}/corr-view/frontend/xml/custom.json

    - name: copy api config file
      tags: [install]
      when: inventory_hostname in groups['api']
      template: src={{ inventory_dir }}/config-api.py.j2 dest={{ corr_path }}/corr-api/config.py

    - name: copy cloud config file
      when: inventory_hostname in groups['cloud']
      template: src={{ inventory_dir }}/config-cloud.py.j2 dest={{ corr_path }}/corr-cloud/config.py
      tags: [install]

    - name: copy admin generation template
      when: inventory_hostname in groups['cloud']
      template: src={{ inventory_dir }}/tmp_admin.json.j2 dest=/tmp/tmp_admin.json
      tags: [install]

    - name: copy admin generation template
      when: inventory_hostname in groups['cloud']
      template: src={{ inventory_dir }}/admin_generation.py.j2 dest={{ corr_path }}/corr-cloud/cloud/views/admin_generation.py
      tags: [install]

    - name: create ~/s3 directory
      tags: [install]
      when: >
        storage_type == "s3" and
        storage_key_id != "" and
        (inventory_hostname in groups['api'] or
        inventory_hostname in groups['cloud'])
      file: path={{ local_path }}/aws state=directory

    - name: copy s3 config
      tags: [install]
      when: >
        storage_type == "s3" and
        storage_key_id != "" and
        (inventory_hostname in groups['api'] or
        inventory_hostname in groups['cloud'])
      template: src={{ inventory_dir }}/config-s3.j2 dest={{ local_path }}/aws/config

    - name: copy s3 credentials
      tags: [install]
      when: >
        storage_type == "s3" and
        storage_key_id != "" and
        (inventory_hostname in groups['api'] or
        inventory_hostname in groups['cloud'])
      template: src={{ inventory_dir }}/credentials-s3.j2 dest={{ local_path }}/aws/credentials

    - name: updating clamav
      shell: "freshclam"
      when: content_inspection == "True"
      become: true
      tags: [serve]

    - name: starting the clamav daemon
      shell: "service clamav-daemon start"
      when: content_inspection == "True"
      become: true
      tags: [serve]

    - include: serve_db.yaml
      when: inventory_hostname in groups['db']
      tags: [serve]

    - include: serve_app.yaml
      when: inventory_hostname in groups['api']
      tags: [serve]
      vars:
        app_path: "{{ corr_path }}/corr-api"

    - include: serve_app.yaml
      when: inventory_hostname in groups['cloud']
      tags: [serve]
      vars:
        app_path: "{{ corr_path }}/corr-cloud"

    - include: serve_frontend.yaml
      when: inventory_hostname in groups['frontend']
      tags: [serve]

    - name: starting the clamav daemon
      shell: "service clamav-daemon restart"
      when: content_inspection == "True"
      become: true
      tags: [serve]
